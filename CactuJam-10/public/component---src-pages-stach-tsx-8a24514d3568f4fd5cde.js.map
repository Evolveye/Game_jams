{"version":3,"file":"component---src-pages-stach-tsx-8a24514d3568f4fd5cde.js","mappings":"+JAEe,SAASA,EAAWC,GAA0C,IAAvCC,UAAUC,EAAWC,OAAOC,GAAQJ,EACxE,MAAO,IAAMK,EAAAA,cAACD,EAAM,KAACC,EAAAA,cAACH,EAAS,MACjC,C,sBCDe,SAASI,EAAUN,GAAgB,IAAf,SAAEO,GAAUP,EAC7C,OACEO,CAEJ,C,iHCLA,MAAMC,EAAS,CACbC,UAAW,YACXC,UAAW,YACXC,MAAO,SAGM,SAASC,EAAOZ,GAAoG,IAAnG,KAAEa,EAAO,UAAS,SAAEC,EAAW,GAAE,UAAEC,EAAY,EAAC,IAAEC,EAAM,EAAC,IAAEC,EAAG,SAAEC,EAAQ,WAAEC,EAAU,SAAEZ,GAAUP,EAC9H,MAQM,EAAEoB,EAAO,EAACC,IAAcC,EAAAA,EAAAA,UAAU,OAClC,EAAEC,EAAO,EAACC,IAAcF,EAAAA,EAAAA,UAAU,cAClC,EAAEG,EAAM,EAACC,IAAaC,EAAAA,EAAAA,aAVZC,CAACC,EAAON,KACtB,OAAQA,GACN,IAAK,YAAa,OAAOM,EAAQd,EACjC,IAAK,YAAa,OAAOc,EAAQd,EACjC,IAAK,QAAS,OAAOC,EACvB,GAK+CA,GAC3Cc,GAAgBC,EAAAA,EAAAA,QAAQ,MACxBC,GAASC,EAAAA,EAAAA,cAAaR,IAC1BS,cAAeJ,EAAcK,SAE7BjB,SAAAA,EAAYO,GAEZC,EAAU,QAAS,GAClB,CAAEI,EAAcK,UA4BnB,OAzBAC,EAAAA,EAAAA,YAAW,KACT,GAAe,OAAXhB,EACJ,OAAKA,GAELU,EAAcK,QAAUE,aAAa,IAAMX,EAAUH,IAAUT,GAExD,IAAMoB,cAAeJ,EAAcK,UAJtBH,aAAM,EAANA,EAAUP,EAIqB,GAClD,CAAEL,EAAQG,KAEba,EAAAA,EAAAA,YAAW,KACTjB,SAAAA,EAAcM,GAEVA,GAASR,EACE,YAATJ,GACFa,EAAUlB,EAAOG,OACjBqB,EAAQP,IAERD,EAAWhB,EAAOE,WAEXe,GAAST,GAClBQ,EAAWhB,EAAOC,UACpB,GACC,CAAEgB,EAAOZ,IAIVR,EAAAA,cAAA,UACEiC,cAAeA,IAAMjB,GAAW,GAChCkB,YAAaA,IAAMlB,GAAW,GAC9BmB,aAAcA,IAAMnB,GAAW,IAE9Bd,EAGP,C,uBC7CA,OAAeR,EAAAA,EAAAA,GAAY,CACzBE,UAfF,WACE,MAAM,EAAEwC,EAAK,EAAEC,IAAapB,EAAAA,EAAAA,UAAU,GAKtC,OACEjB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACO,EAAO,CAACC,KAAK,OAAOI,IAAK,IAAKE,WALhBwB,GAAKD,EAAUC,GAKyBzB,SAJ1CyB,MAI8D5B,UAAW,GAAG,WACzFV,EAAAA,cAAA,OAAKuC,MAAO,CAAEC,OAAO,GAAIJ,QAAOK,gBAAgB,SAGtD,EAIE3C,OAAQG,EAAAA,G","sources":["webpack://cactu-jam-10/./src/core/functions/composePage.tsx","webpack://cactu-jam-10/./src/core/layouts/main.tsx","webpack://cactu-jam-10/./src/components/Trigger.tsx","webpack://cactu-jam-10/./src/pages/stach.tsx"],"sourcesContent":["import React from \"react\"\r\n\r\nexport default function composePage({ component:Component, layout:Layout }) {\r\n  return () => <Layout><Component /></Layout>\r\n}\r\n","import \"../styles/normalize.css\"\r\nimport \"../styles/main.css\"\r\n\r\nexport default function MainLayout({ children }) {\r\n  return (\r\n    children\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useReducer, useRef, useState } from \"react\"\r\n\r\nconst Action = {\r\n  INCREMENT: `increment`,\r\n  DECREMENT: `decrement`,\r\n  RESET: `reset`,\r\n}\r\n\r\nexport default function Trigger({ type = `growing`, interval = 50, increment = 1, min = 0, max, onFinish, onProgress, children }) {\r\n  const reducer = (state, action) => {\r\n    switch (action) {\r\n      case `increment`: return state + increment\r\n      case `decrement`: return state - increment\r\n      case `reset`: return min\r\n    }\r\n  }\r\n\r\n  const [ active, setActive ] = useState( null )\r\n  const [ action, setAction ] = useState( `increment` )\r\n  const [ value, dispatch ] = useReducer( reducer, min )\r\n  const intervalIdRef = useRef( null )\r\n  const finish = useCallback( value => {\r\n    clearInterval( intervalIdRef.current )\r\n\r\n    onFinish?.( value )\r\n\r\n    dispatch( `reset` )\r\n  }, [ intervalIdRef.current ] )\r\n\r\n\r\n  useEffect( () => {\r\n    if (active === null) return\r\n    if (!active) return finish?.( value )\r\n\r\n    intervalIdRef.current = setInterval( () => dispatch( action ), interval )\r\n\r\n    return () => clearInterval( intervalIdRef.current )\r\n  }, [ active, action ] )\r\n\r\n  useEffect( () => {\r\n    onProgress?.( value )\r\n\r\n    if (value >= max) {\r\n      if (type === `growing`) {\r\n        dispatch( Action.RESET )\r\n        finish( value )\r\n      } else {\r\n        setAction( Action.DECREMENT )\r\n      }\r\n    } else if (value <= min) {\r\n      setAction( Action.INCREMENT )\r\n    }\r\n  }, [ value, type ] )\r\n\r\n\r\n  return (\r\n    <button\r\n      onPointerDown={() => setActive( true )}\r\n      onPointerUp={() => setActive( false )}\r\n      onPointerOut={() => setActive( false )}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Trigger from \"../components/Trigger\"\r\nimport composePage from \"../core/functions/composePage\"\r\nimport MainLayout from \"../core/layouts/main\"\r\n\r\nfunction Stach() {\r\n  const [ width, setWidth ] = useState( 0 )\r\n\r\n  const onProgress = v => setWidth( v )\r\n  const onFinish = v => {}\r\n\r\n  return (\r\n    <>\r\n      <Trigger type=\"staÅ›\" max={100} onProgress={onProgress} onFinish={onFinish} increment={4}>Trzymaj</Trigger>\r\n      <div style={{ height:10, width, backgroundColor:`red` }} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default composePage({\r\n  component: Stach,\r\n  layout: MainLayout,\r\n})\r\n"],"names":["composePage","_ref","component","Component","layout","Layout","React","MainLayout","children","Action","INCREMENT","DECREMENT","RESET","Trigger","type","interval","increment","min","max","onFinish","onProgress","active","setActive","useState","action","setAction","value","dispatch","useReducer","reducer","state","intervalIdRef","useRef","finish","useCallback","clearInterval","current","useEffect","setInterval","onPointerDown","onPointerUp","onPointerOut","width","setWidth","v","style","height","backgroundColor"],"sourceRoot":""}
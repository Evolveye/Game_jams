{"version":3,"sources":["components/movable.js","components/walls.js","components/air.js","components/entities.js","components/web.js","App.js","serviceWorker.js","index.js"],"names":["Cobweb","neighbours","left","top","right","bottom","Wood","Grass","Stone","Barrier","Air","Spider","x","y","canShoot","shooting","kills","this","Housefly","score","size","speed","hp","speedMultiplier","pythagoras","x1","y1","x2","y2","Math","sqrt","randomBetween","min","max","floor","random","Web","width","window","innerWidth","height","innerHeight","canvas","ctx","loopId","timerId","keys","mouse","_pressUsed","pressed","level","webCellSize","offsetLeft","offsetTop","gravitySpeed","webColor","maxCobwebWidth","entities","viewfinderSize","spawnSpeed","gameover","HomefliesLevels","state","time","killed","handleResize","handleRef","ref","getContext","logic","player","longestRow","moveX","moveY","isFirstPressUse","cobWebRange","filter","forEach","entity","setTimeout","rand","index","length","homeflyConfig","push","nextPlayerCell","levelCell","some","cell","entityNearPlayer","setState","row","alert","init","draw","clearRect","stack","obj","offsetX","offsetY","fillStyle","fillRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","arc","PI","fill","playerOffsetX","playerOffsetY","webCellSizeBy3","render","className","setEvents","stopLoop","setDefaults","startLoop","setInterval","requestAnimationFrame","clearInterval","repeat","split","Array","from","map","char","cobweb","find","document","addEventListener","keyCode","clientX","clientY","round","React","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yNAAaA,EAAb,sCACEC,WAAa,CACXC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,QAAQ,IAICC,EAAb,kCACaC,EAAb,kCCVaC,EAAb,kCACaC,EAAb,kCCDaC,EAAb,kCCAqBC,EAKnB,WAAaC,EAAGC,GAAK,yBAJrBC,UAAW,EAIS,KAHpBC,UAAW,EAGS,KAFpBC,MAAQ,EAGNC,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,GAGAK,EACX,WAAaN,EAAGC,GAA6C,IAAD,yDAAL,GAAK,IAAvCM,aAAuC,MAAjC,GAAiC,MAA7BC,YAA6B,MAAxB,EAAwB,MAArBC,aAAqB,MAAf,EAAe,MAAZC,UAAY,MAAT,EAAS,sBAC1DL,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKG,KAAOA,EACZH,KAAKM,gBAAkBF,EACvBJ,KAAKK,GAAKA,EACVL,KAAKE,MAAQA,GCVXK,EAAa,SAACC,EAAIC,EAAIC,EAAIC,GAAb,OAAoBC,KAAKC,KAAM,SAACH,EAAKF,EAAO,GAAb,SAAkBG,EAAKF,EAAO,KAC1EK,EAAgB,SAACC,EAAKC,GAAN,OAAcD,EAAMH,KAAKK,OAAQD,EAAMD,GAAOH,KAAKM,WAEpDC,E,4MACnBC,MAAQC,OAAOC,W,EACfC,OAASF,OAAOG,Y,EAEhBC,OAAS,K,EAETC,IAAM,K,EACNC,OAAS,E,EACTC,QAAU,E,EACVC,KAAO,G,EACPC,MAAQ,CACNC,WAAY,EACZpC,EAAG,KACHC,EAAG,KACHoC,SAAS,EACT,sBACE,QAAKhC,KAAKgC,UAEVhC,KAAK+B,YAAc,EAEZ/B,KAAK+B,WAAa,IAAM,K,EAKnCE,MAAQ,CAAC,I,EACTC,YAAc,G,EACdC,WAAa,E,EACbC,UAAY,E,EAEZC,aAAe,G,EACfC,S,UACAC,eAAiB,I,EACjBC,SAAW,G,EACXC,eAAiB,G,EACjBC,WAAa,E,EACbC,UAAW,E,EACXC,gBAAkB,CAChB,CAAE1C,MAAM,GAAKC,KAAK,EAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,EAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,EAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,GAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,IAAKC,KAAK,GAAIC,MAAM,EAAIC,GAAG,GACnC,CAAEH,MAAM,IAAKC,KAAK,GAAIC,MAAM,GAAIC,GAAG,GACnC,CAAEH,MAAM,IAAKC,KAAK,GAAIC,MAAM,GAAIC,GAAG,GACnC,CAAEH,MAAM,IAAKC,KAAK,GAAIC,MAAM,GAAIC,GAAG,GACnC,CAAEH,MAAM,IAAKC,KAAK,GAAIC,MAAM,GAAIC,GAAG,I,EAGrCwC,MAAQ,CACN3C,MAAO,EACP4C,KAAM,EACNC,OAAQ,G,EA2BVC,aAAe,WACb,EAAK5B,MAAQC,OAAOC,WACpB,EAAKC,OAASF,OAAOG,YAErB,EAAKC,OAAOL,MAAQ,EAAKA,MACzB,EAAKK,OAAOF,OAAS,EAAKA,OAEtB,EAAKH,MAAQ,KACf,EAAKc,YAAc,GACV,EAAKd,MAAQ,KACtB,EAAKc,YAAc,GAEnB,EAAKA,YAAc,I,EAIvBe,UAAY,SAAAC,GACV,EAAKzB,OAASyB,EACd,EAAKxB,IAAMwB,EAAIC,WAAJ,O,EAsEbC,MAAQ,WAAO,IAAD,iBAEVnB,EAFU,EAEVA,MACAI,EAHU,EAGVA,aACAF,EAJU,EAIVA,WACAC,EALU,EAKVA,UACAF,EANU,EAMVA,YACAd,EAPU,EAOVA,MACAG,EARU,EAQVA,OACAO,EATU,EASVA,MACAD,EAVU,EAUVA,KACAwB,EAXU,EAWVA,OACAb,EAZU,EAYVA,SACAC,EAbU,EAaVA,eACAF,EAdU,EAcVA,eACAK,EAfU,EAeVA,gBACAC,EAhBU,EAgBVA,MAGES,EAAa,EACbC,EAAQ,EACRC,EAAQ,EAEZ,GAAKvB,EAAL,CAKA,IAJIJ,EAAM,KAAQA,EAAM,OAAM0B,GAAS,KACnC1B,EAAM,KAAQA,EAAM,OAAM2B,GAAS,KACnC3B,EAAM,KAAQA,EAAM,OAAM0B,GAAS,KACnC1B,EAAM,KAAQA,EAAM,OAAM2B,GAAS,IACnC1B,EAAM2B,gBAAiB,CACzBJ,EAAOvD,UAAW,EAClBuD,EAAOxD,UAAW,EAElB,IAAM6D,EAAcnD,EAAY4B,EAAakB,EAAO1D,EAAIuC,EAAcA,EAAc,EAAGE,EAAYiB,EAAOzD,EAAIsC,EAAcA,EAAc,EAAGJ,EAAMnC,EAAGmC,EAAMlC,GAAM2C,EAElKC,EAASmB,QAAQ,gBAAGhE,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGO,EAAT,EAASA,KAAT,OACfI,EAAY4B,EAAaxC,EAAIuC,EAAaE,EAAYxC,EAAIsC,EAAaJ,EAAMnC,EAAGmC,EAAMlC,GAAMO,EAAOsC,EAAiB,GAAKiB,KACzHE,SAAS,SAAAC,GAAM,OAAIA,EAAOxD,IAAM,KAElCyD,YAAY,WACVT,EAAOvD,UAAW,EAClBuD,EAAOxD,UAAW,IACjB,IAEL,GAAIe,KAAKM,UAAY,MAAS,IAAM2B,EAAMC,MAAQ,IAAM,CACtD,IAAMiB,EAAOnD,KAAKK,MAAOoC,EAAOtD,MAAQ,IAClCiE,EAAQD,EAAOnB,EAAgBqB,OAASF,EAAOnB,EAAgBqB,OAAS,EACxEC,EAAgBtB,EAAiB9B,EAAekD,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAGA,IAEtFxB,EAAS2B,KAAM,IAAIlE,EAAUa,EAAe,EAAGmB,EAAO,GAAIgC,OAAS,GAAKnD,EAAe,EAAGmB,EAAMgC,OAAS,GAAKC,IAGhH,IAAME,EAAiB,EAAKC,UAAWhB,EAAO1D,EAAI4D,EAAOF,EAAOzD,EAAI4D,GA6CpE,IA3CI,OAACY,QAAD,IAACA,OAAD,EAACA,EAAgBE,MAAM,SAAAC,GAAI,OAAIA,aAAgB/E,QACjD,EAAK6D,OAAO1D,GAAK4D,EACjB,EAAKF,OAAOzD,IAAmB,OAAdwE,QAAc,IAAdA,OAAA,EAAAA,EAAgBE,MAAM,SAAAC,GAAI,OACzCA,aAAgBxF,GAChBwF,aAAgBjF,GAChBiF,aAAgBlF,MACdmE,EAAQ,EAAKnB,cAEnB,EAAKG,SAAWA,EAASmB,QAAQ,SAACE,GAChC,IAAMW,EAAmBjE,EAAY8C,EAAO1D,EAAI,GAAK0D,EAAOzD,EAAI,GAAKiE,EAAOlE,EAAGkE,EAAOjE,GAAMiE,EAAO1D,KAAO+B,EAC1G,GAAI2B,EAAOxD,GAAK,EACd,GAAImE,EACF,EAAK7B,UAAW,MACX,CAAC,IAAD,EACDY,GAAS3C,KAAKM,SAAW,IAAO,EAAI2C,EAAOvD,gBAC3CkD,GAAS5C,KAAKM,SAAW,IAAO,EAAI2C,EAAOvD,iBAE3C,UAAC,EAAK+D,UAAWR,EAAOlE,EAAI4D,EAAOM,EAAOjE,EAAI4D,UAA9C,aAAC,EAAsDc,MAAM,SAAAC,GAAI,OAAIA,aAAgB/E,QACvFqE,EAAOlE,GAAK4D,EACZM,EAAOjE,GAAK4D,OAGX,CACL,GAAIgB,EAGF,OAFAnB,EAAOtD,OAAS,EAChB,EAAK0E,UAAU,gBAAGvE,EAAH,EAAGA,MAAO6C,EAAV,EAAUA,OAAV,MAAwB,CAAE7C,MAAOA,EAAQ2D,EAAO3D,MAAQ6C,OAAQA,EAAS,OACjF,EACD,IAAD,GAMD,UAAC,EAAKsB,UAAWR,EAAOlE,EAAGkE,EAAOjE,EAAIyC,EAAezB,KAAKM,iBAA1D,aAAC,EAAqEoD,MALxD,SAAAC,GAAI,OACpBA,aAAgBxF,GAChBwF,aAAgBjF,GAChBiF,aAAgBlF,QAGhBwE,EAAOjE,GAAKyC,GAKlB,OAAO,KAETJ,EAAM2B,SAAS,SAAAc,GAAG,OAAIA,EAAIT,OAASX,IAAeA,EAAaoB,EAAIT,WAE/D,EAAKtB,SAEP,OADAgC,MAAM,cACC,EAAKC,OAGd,EAAKzC,WAAaf,EAAQ,EAAIkC,EAAapB,EAAc,EACzD,EAAKE,UAAYb,EAAS,EAAIU,EAAMgC,OAAS/B,EAAc,I,EAE7D2C,KAAO,WAAO,IAAD,iBAETnD,EAFS,EAETA,IACAS,EAHS,EAGTA,WACAC,EAJS,EAITA,UACAF,EALS,EAKTA,YACAd,EANS,EAMTA,MACAG,EAPS,EAOTA,OACAO,EARS,EAQTA,MACAS,EATS,EASTA,eACAc,EAVS,EAUTA,OACAb,EAXS,EAWTA,SACAC,EAZS,EAYTA,eAGFf,EAAIoD,UAAW,EAAG,EAAG1D,EAAOG,GAG5B,EAAKU,MAAM2B,SAAS,SAACc,EAAK9E,GAAN,OAAY8E,EAAId,SAAS,SAACmB,EAAOpF,GAAR,OAAcoF,EAAMnB,SAAS,SAAAoB,GACxE,IAAMC,EAAU9C,EAAaxC,EAAIuC,EAC3BgD,EAAU9C,EAAYxC,EAAIsC,EAEhC,GAAI8C,aAAe3F,EACjBqC,EAAIyD,UAAJ,SACAzD,EAAI0D,SAAUH,EAASC,EAAShD,EAAc,EAAGA,EAAc,QAC1D,GAAI8C,aAAevF,EACxBiC,EAAIyD,UAAJ,UACAzD,EAAI0D,SAAUH,EAASC,EAAShD,EAAc,EAAGA,EAAc,QAC1D,GAAI8C,aAAe1F,EACxBoC,EAAIyD,UAAJ,QACAzD,EAAI0D,SAAUH,EAASC,EAAShD,EAAc,EAAGA,EAAc,QAC1D,GAAI8C,aAAejG,EAAQ,CAAC,IAAD,EACKiG,EAAIhG,WAAjCC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,IAAKC,EADa,EACbA,MAAOC,EADM,EACNA,OAE1BsC,EAAIyD,UAAJ,QACAzD,EAAI0D,SAAUH,EAASC,EAAShD,EAAc,EAAGA,EAAc,GAE/DR,EAAI2D,YAEJ3D,EAAI4D,OAAQL,EAASC,EAAUhD,EAAc,GAC7CR,EAAI6D,OAAQN,EAAU/C,EAAagD,EAAUhD,EAAc,GAE3DR,EAAI4D,OAAQL,EAAU/C,EAAc,EAAGgD,GACvCxD,EAAI6D,OAAQN,EAAU/C,EAAc,EAAGgD,EAAUhD,GAEjDR,EAAI8D,YAAJ,OACA9D,EAAI+D,UAAY,EAChB/D,EAAIgE,SAEJhE,EAAI2D,YAECpG,IACHyC,EAAI4D,OAAQL,EAASC,GACrBxD,EAAI6D,OAAQN,EAASC,EAAUhD,IAE5BhD,IACHwC,EAAI4D,OAAQL,EAASC,GACrBxD,EAAI6D,OAAQN,EAAU/C,EAAagD,IAEhC/F,IACHuC,EAAI4D,OAAQL,EAAU/C,EAAagD,GACnCxD,EAAI6D,OAAQN,EAAU/C,EAAagD,EAAUhD,IAE1C9C,IACHsC,EAAI4D,OAAQL,EAASC,EAAUhD,GAC/BR,EAAI6D,OAAQN,EAAU/C,EAAagD,EAAUhD,IAE/CR,EAAI8D,YAAJ,OACA9D,EAAI+D,UAAY,EAChB/D,EAAIgE,mBAQRlD,EAASoB,SAAS,YAAqB,IAAlBjE,EAAiB,EAAjBA,EAAGC,EAAc,EAAdA,EAAGO,EAAW,EAAXA,KACzBuB,EAAIyD,UAAJ,QACAzD,EAAI2D,YACJ3D,EAAIiE,IAAKxD,EAAaxC,EAAIuC,EAAaE,EAAYxC,EAAIsC,EAAa/B,EAAO,EAAG,EAAa,EAAVS,KAAKgF,IACtFlE,EAAImE,UAIN,IAAMC,EAAgB3D,EAAakB,EAAO1D,EAAIuC,EACxC6D,EAAgB3D,EAAYiB,EAAOzD,EAAIsC,EACvC8D,EAAiB9D,EAAc,EAEhCJ,EAAMnC,IACT+B,EAAI8D,YAAcjF,EAAYuF,EAAgB5D,EAAc,EAAG6D,EAAgB7D,EAAc,EAAGJ,EAAMnC,EAAGmC,EAAMlC,GAAM2C,EAAnG,gBAIlBb,EAAI2D,YACJ3D,EAAI4D,OAAQQ,EAAgB5D,EAAc,EAAG6D,EAAgB7D,EAAc,GAC3ER,EAAI6D,OAAQzD,EAAMnC,EAAGmC,EAAMlC,GAC3B8B,EAAIgE,SAEJhE,EAAI2D,YACJ3D,EAAIiE,IAAK7D,EAAMnC,EAAGmC,EAAMlC,EAAG6C,EAAiB,EAAG,EAAa,EAAV7B,KAAKgF,IAEnDvC,EAAOvD,UACT4B,EAAI8D,YAAJ,QACA9D,EAAIgE,WAEJhE,EAAIyD,UAAJ,QACAzD,EAAImE,SAIRnE,EAAIyD,UAAJ,MACAzD,EAAI0D,SAAUU,EAAeC,EAAeC,EAAgBA,GAC5DtE,EAAI0D,SAAUU,EAAgBE,EAAgBD,EAAgBC,EAAgBA,EAAgBA,GAC9FtE,EAAI0D,SAAUU,EAAiC,EAAjBE,EAAoBD,EAAiC,EAAjBC,EAAoBA,EAAgBA,GACtGtE,EAAI0D,SAAUU,EAAiC,EAAjBE,EAAoBD,EAAeC,EAAgBA,GACjFtE,EAAI0D,SAAUU,EAAeC,EAAiC,EAAjBC,EAAoBA,EAAgBA,I,EAEnFC,OAAS,kBAAM,oCACb,6BAASC,UAAU,SACjB,0BAAMA,UAAU,cAAhB,WAAsC,EAAKrD,MAAM3C,OACjD,0BAAMgG,UAAU,cAAhB,aAAwC,EAAKrD,MAAMC,MACnD,0BAAMoD,UAAU,cAAhB,mBAA8C,EAAKrD,MAAME,QACzD,0BAAMmD,UAAU,cAAhB,UACUtF,KAAKK,MAAO,WAAK4B,MAAM3C,MAAS,IAAK,EAAK2C,MAAME,QAAU,IAAM,GAAK,EAAKF,MAAMC,MAAQ,GAAK,QAGzG,6BAASoD,UAAU,eACjB,gFACA,mIACA,6GACA,+PAIA,0JACA,iFAC6C,6BAD7C,4EAEoD,6BAFpD,mEAKA,wGAEF,4BAAQhD,IAAK,EAAKD,UAAWiD,UAAU,e,kEArWvClG,KAAKgD,eACLhD,KAAKmG,YACLnG,KAAK4E,S,6BAGL5E,KAAKoG,WACLpG,KAAKqG,cACLrG,KAAKsG,c,kCAGM,IAAD,OACVtG,KAAK4B,QAAU2E,aAAa,kBAAM,EAAK9B,UAAU,kBAAe,CAAE3B,KAAjB,EAAGA,KAA2B,QAAS,KACxF9C,KAAK2B,OAAS4E,aAAa,WACzB,EAAKnD,QACD,EAAK1B,KAAK8E,sBAAuB,EAAK3B,QACzC,IAAO,M,iCAGV4B,cAAezG,KAAK4B,SACpB6E,cAAezG,KAAK2B,U,oCAuBP,IAAD,OACZ3B,KAAK2C,UAAW,EAChB3C,KAAKqC,aAAe,GACpBrC,KAAKsC,SAAL,QACAtC,KAAKuC,eAAiB,IACtBvC,KAAKwC,SAAW,GAChBxC,KAAKyC,eAAiB,GACtBzC,KAAK0C,WAAa,EAClB1C,KAAK6B,KAAO,GAEZ7B,KAAKiC,MAAQ,CAAC,CAAD,4CACuB,IAAIyE,OAAQ,IAAKC,MAAjB,KADvB,4DAEuB,IAAID,OAAQ,IAAKC,MAAjB,KAFvB,mCAGRC,MAAMC,KAAM,CAAE5C,OAAO,KAAM,8DAAwC,IAAIyC,OAAQ,IAAKC,MAAjB,KAAxC,mBAHnB,8CAIuB,IAAID,OAAQ,IAAKC,MAAjB,KAJvB,8DAKuB,IAAID,OAAQ,IAAKC,MAAjB,KALvB,+DAMuB,IAAID,OAAQ,IAAKC,MAAjB,KANvB,+DAOuB,IAAID,OAAQ,IAAKC,MAAjB,KAPvB,gEAQuB,IAAID,OAAQ,IAAKC,MAAjB,KARvB,+DASuB,IAAID,OAAQ,IAAKC,MAAjB,KATvB,8DAUuB,IAAID,OAAQ,IAAKC,MAAjB,KAVvB,4DAWuB,IAAID,OAAQ,IAAKC,MAAjB,KAXvB,4DAYuB,IAAID,OAAQ,IAAKC,MAAjB,KAZvB,iBAaXG,KAAK,SAAApC,GAAG,OAAIA,EAAIoC,KAAK,SAAAC,GACrB,OAAQA,GACN,IAAI,IAAO,MAAO,CAAE,IAAI1H,GACxB,IAAI,IAAO,MAAO,CAAE,IAAIC,GACxB,IAAI,IAAO,MAAO,CAAE,IAAIP,GACxB,IAAI,KAAO,MAAO,CAAE,IAAIU,EAAO,IAAIV,GACnC,IAAI,KAAO,MAAO,CAAE,IAAIO,EAAS,IAAIP,GACrC,IAAI,IAAO,MAAO,CAAE,IAAIQ,GACxB,IAAI,IAAO,MAAO,CAAE,IAAIC,GACxB,IAAI,IAAO,MAAO,CAAE,IAAIC,GACxB,QAAW,MAAO,UAItBO,KAAKqD,OAAS,IAAI3D,EAAQ,EAAGM,KAAKiC,MAAMgC,OAAS,GAEjDjE,KAAKiC,MAAM2B,SAAS,SAACc,EAAK9E,GAAN,OAAY8E,EAAId,SAAS,SAACmB,EAAOpF,GAAO,IAAD,gBACnDqH,EAASjC,EAAMkC,MAAM,SAAAjC,GAAG,OAAIA,aAAejG,KAE5CiI,KACL,UAAI,EAAK/E,MAAOrC,EAAI,UAApB,iBAAI,EAAuBD,EAAI,UAA/B,aAAI,EAAgC2E,MAAM,SAAAC,GAAI,OAAIA,aAAgBxF,QAAUiI,EAAOhI,WAAWC,MAAO,IACrG,UAAI,EAAKgD,MAAOrC,EAAI,UAApB,iBAAI,EAAuBD,EAAI,UAA/B,aAAI,EAAgC2E,MAAM,SAAAC,GAAI,OAAIA,aAAgBxF,QAAUiI,EAAOhI,WAAWE,KAAM,IACpG,UAAI,EAAK+C,MAAOrC,EAAI,UAApB,iBAAI,EAAuBD,EAAI,UAA/B,aAAI,EAAgC2E,MAAM,SAAAC,GAAI,OAAIA,aAAgBxF,QAAUiI,EAAOhI,WAAWG,OAAQ,IACtG,UAAI,EAAK8C,MAAOrC,EAAI,UAApB,iBAAI,EAAuBD,EAAI,UAA/B,aAAI,EAAgC2E,MAAM,SAAAC,GAAI,OAAIA,aAAgBxF,QAAUiI,EAAOhI,WAAWI,QAAS,Y,kCAG9F,IAAD,OACV8H,SAASC,iBAAT,WAAsC,gBAAGC,EAAH,EAAGA,QAAH,OAAiB,EAAKvF,KAAMuF,IAAY,KAC9EF,SAASC,iBAAT,SAAoC,gBAAGC,EAAH,EAAGA,QAAH,OAAiB,EAAKvF,KAAMuF,IAAY,KAC5EF,SAASC,iBAAT,eAA0C,WACxC,EAAKrF,MAAMC,WAAa,EACxB,EAAKD,MAAME,SAAU,KAEvBkF,SAASC,iBAAT,aAAwC,kBAAM,EAAKrF,MAAME,SAAU,KACnEkF,SAASC,iBAAT,aAAwC,YAA2B,IAAxBE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClD,EAAKxF,MAAMnC,EAAI0H,EACf,EAAKvF,MAAMlC,EAAI0H,KAEjBjG,OAAO8F,iBAAP,SAAmCnH,KAAKgD,gB,gCAG/BrD,EAAGC,GAAK,IAAD,EAChB,iBAAOI,KAAKiC,MAAOrB,KAAK2G,MAAO3H,WAA/B,aAAO,EAAiCgB,KAAK2G,MAAO5H,Q,GA1KvB6H,IAAMC,WCJxB,G,MAAA,kBAAM,kBAAC,EAAD,QCMfC,EAAcC,QACW,cAA7BtG,OAAOuG,SAASC,UAEe,UAA7BxG,OAAOuG,SAASC,UAEhBxG,OAAOuG,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3F,QACfqF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASjD,OACP,kBAAC,IAAMkD,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASkC,eAAe,SDanB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,cAAwBjI,OAAOuG,SAAS2B,MACpDC,SAAWnI,OAAOuG,SAAS4B,OAIvC,OAGFnI,OAAO8F,iBAAiB,QAAQ,WAC9B,IAAMa,EAAK,UAAMsB,cAAN,sBAEP5B,IAgEV,SAAiCM,EAAOC,GAEtCwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5BrB,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,MAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,MAAK,WAC7BhH,OAAOuG,SAASsC,eAKpBnC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCnC/BE,I","file":"static/js/main.abdf389e.chunk.js","sourcesContent":["export class Cobweb {\r\n  neighbours = {\r\n    left: false,\r\n    top: false,\r\n    right: false,\r\n    bottom: false,\r\n  }\r\n}\r\n\r\nexport class Wood {}\r\nexport class Grass {}","export class Stone {}\r\nexport class Barrier {}","export class Air {}","export default class Spider {\r\n  canShoot = true\r\n  shooting = false\r\n  kills = 0\r\n\r\n  constructor( x, y ) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n}\r\nexport class Housefly {\r\n  constructor( x, y, { score=10, size=1, speed=1, hp=1 }={} ) {\r\n    this.x = x\r\n    this.y = y\r\n    this.size = size\r\n    this.speedMultiplier = speed\r\n    this.hp = hp\r\n    this.score = score\r\n  }\r\n}","import React from \"react\"\r\n\r\nimport { Cobweb, Wood, Grass } from \"./movable\"\r\nimport { Stone, Barrier } from \"./walls\"\r\nimport { Air } from \"./air\"\r\nimport Spider, { Housefly } from \"./entities\"\r\n\r\nconst pythagoras = (x1, y1, x2, y2) => Math.sqrt( (x2 - x1) ** 2 + (y2 - y1) ** 2 )\r\nconst randomBetween = (min, max) => min + Math.floor( (max - min) * Math.random() )\r\n\r\nexport default class Web extends React.Component {\r\n  width = window.innerWidth\r\n  height = window.innerHeight\r\n  /** @type {HTMLCanvasElement} */\r\n  canvas = null\r\n  /** @type {CanvasRenderingContext2D} */\r\n  ctx = null\r\n  loopId = 0\r\n  timerId = 0\r\n  keys = []\r\n  mouse = {\r\n    _pressUsed: 0,\r\n    x: null,\r\n    y: null,\r\n    pressed: false,\r\n    get isFirstPressUse() {\r\n      if (!this.pressed) return false\r\n\r\n      this._pressUsed += 1\r\n\r\n      return this._pressUsed - 1 === 0\r\n    }\r\n  }\r\n\r\n  /** @type {(Cobweb|Spider)[][][]} */\r\n  level = [[]]\r\n  webCellSize = 19\r\n  offsetLeft = 0\r\n  offsetTop = 0\r\n\r\n  gravitySpeed = 0.1\r\n  webColor = `white`\r\n  maxCobwebWidth = 200\r\n  entities = []\r\n  viewfinderSize = 30\r\n  spawnSpeed = 1\r\n  gameover = false\r\n  HomefliesLevels = [\r\n    { score:10,  size:5,  speed:1,  hp:1 },\r\n    { score:12,  size:3,  speed:2,  hp:1 },\r\n    { score:15,  size:2,  speed:2,  hp:1 },\r\n    { score:20,  size:10, speed:2,  hp:3 },\r\n    { score:25,  size:13, speed:3,  hp:5 },\r\n    { score:33,  size:15, speed:3,  hp:5 },\r\n    { score:40,  size:15, speed:5,  hp:5 },\r\n    { score:50,  size:28, speed:6,  hp:6 },\r\n    { score:65,  size:22, speed:7,  hp:6 },\r\n    { score:80,  size:25, speed:8,  hp:6 },\r\n    { score:100, size:30, speed:9,  hp:7 },\r\n    { score:115, size:35, speed:12, hp:7 },\r\n    { score:140, size:39, speed:12, hp:8 },\r\n    { score:160, size:41, speed:13, hp:8 },\r\n    { score:160, size:41, speed:13, hp:8 },\r\n  ]\r\n\r\n  state = {\r\n    score: 0,\r\n    time: 0,\r\n    killed: 0,\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.game = this\r\n    this.handleResize()\r\n    this.setEvents()\r\n    this.init()\r\n  }\r\n  init() {\r\n    this.stopLoop()\r\n    this.setDefaults()\r\n    this.startLoop()\r\n  }\r\n\r\n  startLoop() {\r\n    this.timerId = setInterval( () => this.setState( ({ time }) => ({ time:(time + 1) }) ), 1000 )\r\n    this.loopId = setInterval( () => {\r\n      this.logic()\r\n      if (this.ctx) requestAnimationFrame( this.draw )\r\n    }, 1000 / 60 )\r\n  }\r\n  stopLoop() {\r\n    clearInterval( this.timerId )\r\n    clearInterval( this.loopId )\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n\r\n    this.canvas.width = this.width\r\n    this.canvas.height = this.height\r\n\r\n    if (this.width < 1550) {\r\n      this.webCellSize = 10\r\n    } else if (this.width < 1550) {\r\n      this.webCellSize = 14\r\n    } else {\r\n      this.webCellSize = 19\r\n    }\r\n  }\r\n  /** @param {HTMLCanvasElement} ref */\r\n  handleRef = ref => {\r\n    this.canvas = ref\r\n    this.ctx = ref.getContext( `2d` )\r\n  }\r\n  setDefaults() {\r\n    this.gameover = false\r\n    this.gravitySpeed = 0.1\r\n    this.webColor = `white`\r\n    this.maxCobwebWidth = 200\r\n    this.entities = []\r\n    this.viewfinderSize = 30\r\n    this.spawnSpeed = 1\r\n    this.keys = []\r\n\r\n    this.level = [\r\n      [ `b`,`b`,`b`, `b`, `b`, `b`,  ...`b`.repeat( 50 ).split( `` ),`b`,`b`,`b` ],\r\n      [ `b`,`a`,`a`, `a`, `a`, `a`,  ...`a`.repeat( 50 ).split( `` ),`a`,`a`,`b` ],\r\n      ...Array.from( { length:15 }, () => [ `b`,`w`,`a`, `a`, `a`, `a`,  ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ] ),\r\n      [ `b`,`w`,`a`, `a`, `a`, `a`,  ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`a`, `ca`,`ca`,`a`,  ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`ca`,`ca`,`a`, `ca`, ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`ca`,`ca`,`ca`,`a`,  ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`ca`,`ca`,`ca`,`ca`, ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`ca`,`a`, `ca`,`ca`, ...`a`.repeat( 50 ).split( `` ),`a`,`w`,`b` ],\r\n      [ `b`,`w`,`cg`,`cg`,`g`, `g`,  ...`g`.repeat( 50 ).split( `` ),`g`,`w`,`b` ],\r\n      [ `b`,`w`,`g`, `g`, `g`, `g`,  ...`g`.repeat( 50 ).split( `` ),`g`,`w`,`b` ],\r\n      [ `b`,`b`,`b`, `b`, `b`, `b`,  ...`b`.repeat( 50 ).split( `` ),`b`,`b`,`b` ],\r\n    ].map( row => row.map( char => {\r\n      switch (char) {\r\n        case `w`:  return [ new Wood() ]\r\n        case `g`:  return [ new Grass() ]\r\n        case `c`:  return [ new Cobweb() ]\r\n        case `ca`: return [ new Air(), new Cobweb() ]\r\n        case `cg`: return [ new Grass(), new Cobweb() ]\r\n        case `s`:  return [ new Stone() ]\r\n        case `b`:  return [ new Barrier() ]\r\n        case `a`:  return [ new Air() ]\r\n        default:   return []\r\n      }\r\n    } ) )\r\n\r\n    this.player = new Spider( 3, this.level.length - 6 )\r\n\r\n    this.level.forEach( (row, y) => row.forEach( (stack, x) => {\r\n      const cobweb = stack.find( obj => obj instanceof Cobweb )\r\n\r\n      if (!cobweb) return\r\n      if (this.level[ y + 0 ]?.[ x - 1 ]?.some( cell => cell instanceof Cobweb )) cobweb.neighbours.left = true\r\n      if (this.level[ y - 1 ]?.[ x + 0 ]?.some( cell => cell instanceof Cobweb )) cobweb.neighbours.top = true\r\n      if (this.level[ y + 0 ]?.[ x + 1 ]?.some( cell => cell instanceof Cobweb )) cobweb.neighbours.right = true\r\n      if (this.level[ y + 1 ]?.[ x + 0 ]?.some( cell => cell instanceof Cobweb )) cobweb.neighbours.bottom = true\r\n    } ) )\r\n  }\r\n  setEvents() {\r\n    document.addEventListener( `keydown`, ({ keyCode }) => this.keys[ keyCode ] = true )\r\n    document.addEventListener( `keyup`, ({ keyCode }) => this.keys[ keyCode ] = false )\r\n    document.addEventListener( `pointerdown`, () => {\r\n      this.mouse._pressUsed = 0\r\n      this.mouse.pressed = true\r\n    } )\r\n    document.addEventListener( `pointerup`, () => this.mouse.pressed = false )\r\n    document.addEventListener( `mousemove`, ({ clientX, clientY }) => {\r\n      this.mouse.x = clientX\r\n      this.mouse.y = clientY\r\n    } )\r\n    window.addEventListener( `resize`, this.handleResize )\r\n  }\r\n\r\n  levelCell( x, y ) {\r\n    return this.level[ Math.round( y ) ]?.[ Math.round( x ) ]\r\n  }\r\n\r\n  logic = () => {\r\n    const {\r\n      level,\r\n      gravitySpeed,\r\n      offsetLeft,\r\n      offsetTop,\r\n      webCellSize,\r\n      width,\r\n      height,\r\n      mouse,\r\n      keys,\r\n      player,\r\n      entities,\r\n      viewfinderSize,\r\n      maxCobwebWidth,\r\n      HomefliesLevels,\r\n      state,\r\n    } = this\r\n\r\n    let longestRow = 0\r\n    let moveX = 0\r\n    let moveY = 0\r\n\r\n    if (!level) return\r\n    if (keys[ 37 ] || keys[ 65 ]) moveX -= 0.1\r\n    if (keys[ 38 ] || keys[ 87 ]) moveY -= 0.1\r\n    if (keys[ 39 ] || keys[ 68 ]) moveX += 0.1\r\n    if (keys[ 40 ] || keys[ 83 ]) moveY += 0.1\r\n    if (mouse.isFirstPressUse) {\r\n      player.shooting = true\r\n      player.canShoot = false\r\n\r\n      const cobWebRange = pythagoras( offsetLeft + player.x * webCellSize + webCellSize / 2, offsetTop + player.y * webCellSize + webCellSize / 2, mouse.x, mouse.y ) < maxCobwebWidth\r\n\r\n      entities.filter( ({ x, y, size }) =>\r\n        pythagoras( offsetLeft + x * webCellSize, offsetTop + y * webCellSize, mouse.x, mouse.y ) < size + viewfinderSize / 2 && cobWebRange\r\n      ).forEach( entity => entity.hp -= 1 )\r\n\r\n      setTimeout( () => {\r\n        player.shooting = false\r\n        player.canShoot = true\r\n      }, 10 )\r\n    }\r\n    if (Math.random() <= 0.003 * (100 + state.time) / 100 ) {\r\n      const rand = Math.floor( player.kills / 10 )\r\n      const index = rand < HomefliesLevels.length ? rand : HomefliesLevels.length - 1\r\n      const homeflyConfig = HomefliesLevels[ randomBetween( index - 4 >= 0 ? index - 4 : 0, index ) ]\r\n\r\n      entities.push( new Housefly( randomBetween( 4, level[ 0 ].length - 3 ), randomBetween( 3, level.length - 6 ), homeflyConfig ) )\r\n    }\r\n\r\n    const nextPlayerCell = this.levelCell( player.x + moveX, player.y + moveY )\r\n\r\n    if (!nextPlayerCell?.some( cell => cell instanceof Barrier )) {\r\n      this.player.x += moveX\r\n      this.player.y += nextPlayerCell?.some( cell =>\r\n        cell instanceof Cobweb ||\r\n        cell instanceof Grass ||\r\n        cell instanceof Wood\r\n      ) ? moveY : this.gravitySpeed\r\n    }\r\n    this.entities = entities.filter( (entity) => {\r\n      const entityNearPlayer = pythagoras( player.x + 0.5, player.y + 0.5, entity.x, entity.y ) < entity.size / webCellSize\r\n      if (entity.hp > 0) {\r\n        if (entityNearPlayer) {\r\n          this.gameover = true\r\n        } else {\r\n          let moveX = (Math.random() - 0.5) / 4 * entity.speedMultiplier\r\n          let moveY = (Math.random() - 0.5) / 4 * entity.speedMultiplier\r\n\r\n          if (!this.levelCell( entity.x + moveX, entity.y + moveY )?.some( cell => cell instanceof Barrier )) {\r\n            entity.x += moveX\r\n            entity.y += moveY\r\n          }\r\n        }\r\n      } else {\r\n        if (entityNearPlayer) {\r\n          player.kills += 1\r\n          this.setState( ({ score, killed }) => ({ score:(score + entity.score), killed:(killed + 1) }) )\r\n          return false\r\n        } else {\r\n          const predicate = cell =>\r\n            cell instanceof Cobweb ||\r\n            cell instanceof Grass ||\r\n            cell instanceof Wood\r\n\r\n          if (!this.levelCell( entity.x, entity.y + gravitySpeed - Math.random() )?.some( predicate )) {\r\n            entity.y += gravitySpeed\r\n          }\r\n        }\r\n      }\r\n\r\n      return true\r\n    } )\r\n    level.forEach( row => row.length > longestRow && (longestRow = row.length) )\r\n\r\n    if (this.gameover) {\r\n      alert( `koniec gry` )\r\n      return this.init()\r\n    }\r\n\r\n    this.offsetLeft = width / 2 - longestRow * webCellSize / 2\r\n    this.offsetTop = height / 2 - level.length * webCellSize / 2\r\n  }\r\n  draw = () => {\r\n    const {\r\n      ctx,\r\n      offsetLeft,\r\n      offsetTop,\r\n      webCellSize,\r\n      width,\r\n      height,\r\n      mouse,\r\n      maxCobwebWidth,\r\n      player,\r\n      entities,\r\n      viewfinderSize,\r\n    } = this\r\n\r\n    ctx.clearRect( 0, 0, width, height )\r\n\r\n    // Draw cells\r\n    this.level.forEach( (row, y) => row.forEach( (stack, x) => stack.forEach( obj => {\r\n      const offsetX = offsetLeft + x * webCellSize\r\n      const offsetY = offsetTop + y * webCellSize\r\n\r\n      if (obj instanceof Wood) {\r\n        ctx.fillStyle = `orange`\r\n        ctx.fillRect( offsetX, offsetY, webCellSize + 1, webCellSize + 1 )\r\n      } else if (obj instanceof Air) {\r\n        ctx.fillStyle = `#00d6ff`\r\n        ctx.fillRect( offsetX, offsetY, webCellSize + 1, webCellSize + 1 )\r\n      } else if (obj instanceof Grass) {\r\n        ctx.fillStyle = `green`\r\n        ctx.fillRect( offsetX, offsetY, webCellSize + 1, webCellSize + 1 )\r\n      } else if (obj instanceof Cobweb) {\r\n        const { left, top, right, bottom } = obj.neighbours\r\n\r\n        ctx.fillStyle = `#fff8`\r\n        ctx.fillRect( offsetX, offsetY, webCellSize + 1, webCellSize + 1 )\r\n\r\n        ctx.beginPath()\r\n\r\n        ctx.moveTo( offsetX, offsetY + webCellSize / 2 )\r\n        ctx.lineTo( offsetX + webCellSize, offsetY + webCellSize / 2 )\r\n\r\n        ctx.moveTo( offsetX + webCellSize / 2, offsetY )\r\n        ctx.lineTo( offsetX + webCellSize / 2, offsetY + webCellSize )\r\n\r\n        ctx.strokeStyle = `#aaa`\r\n        ctx.lineWidth = 2\r\n        ctx.stroke()\r\n\r\n        ctx.beginPath()\r\n\r\n        if (!left) {\r\n          ctx.moveTo( offsetX, offsetY )\r\n          ctx.lineTo( offsetX, offsetY + webCellSize )\r\n        }\r\n        if (!top) {\r\n          ctx.moveTo( offsetX, offsetY )\r\n          ctx.lineTo( offsetX + webCellSize, offsetY )\r\n        }\r\n        if (!right) {\r\n          ctx.moveTo( offsetX + webCellSize, offsetY )\r\n          ctx.lineTo( offsetX + webCellSize, offsetY + webCellSize )\r\n        }\r\n        if (!bottom) {\r\n          ctx.moveTo( offsetX, offsetY + webCellSize )\r\n          ctx.lineTo( offsetX + webCellSize, offsetY + webCellSize )\r\n        }\r\n        ctx.strokeStyle = `#fff`\r\n        ctx.lineWidth = 3\r\n        ctx.stroke()\r\n      } else if (obj instanceof Stone) {\r\n\r\n      }\r\n\r\n    } ) ) )\r\n\r\n    // Draw entities\r\n    entities.forEach( ({ x, y, size }) => {\r\n      ctx.fillStyle = `black`\r\n      ctx.beginPath()\r\n      ctx.arc( offsetLeft + x * webCellSize, offsetTop + y * webCellSize, size / 2, 0, Math.PI * 2 )\r\n      ctx.fill()\r\n    } )\r\n\r\n    // Draw player elements\r\n    const playerOffsetX = offsetLeft + player.x * webCellSize\r\n    const playerOffsetY = offsetTop + player.y * webCellSize\r\n    const webCellSizeBy3 = webCellSize / 3\r\n\r\n    if ( mouse.x ) {\r\n      ctx.strokeStyle = pythagoras( playerOffsetX + webCellSize / 2, playerOffsetY + webCellSize / 2, mouse.x, mouse.y ) < maxCobwebWidth\r\n        ? `#0f0a`\r\n        : `#f00a`\r\n\r\n      ctx.beginPath()\r\n      ctx.moveTo( playerOffsetX + webCellSize / 2, playerOffsetY + webCellSize / 2 )\r\n      ctx.lineTo( mouse.x, mouse.y )\r\n      ctx.stroke()\r\n\r\n      ctx.beginPath()\r\n      ctx.arc( mouse.x, mouse.y, viewfinderSize / 2, 0, Math.PI * 2 )\r\n\r\n      if (player.shooting) {\r\n        ctx.strokeStyle = `#fffb`\r\n        ctx.stroke()\r\n      } else {\r\n        ctx.fillStyle = `#fff8`\r\n        ctx.fill()\r\n      }\r\n    }\r\n\r\n    ctx.fillStyle = `red`\r\n    ctx.fillRect( playerOffsetX, playerOffsetY, webCellSizeBy3, webCellSizeBy3 )\r\n    ctx.fillRect( playerOffsetX + webCellSizeBy3, playerOffsetY + webCellSizeBy3, webCellSizeBy3, webCellSizeBy3 )\r\n    ctx.fillRect( playerOffsetX + webCellSizeBy3 * 2, playerOffsetY + webCellSizeBy3 * 2, webCellSizeBy3, webCellSizeBy3 )\r\n    ctx.fillRect( playerOffsetX + webCellSizeBy3 * 2, playerOffsetY, webCellSizeBy3, webCellSizeBy3 )\r\n    ctx.fillRect( playerOffsetX, playerOffsetY + webCellSizeBy3 * 2, webCellSizeBy3, webCellSizeBy3 )\r\n  }\r\n  render = () => <>\r\n    <article className=\"stats\">\r\n      <span className=\"stats-item\">Punkty: {this.state.score}</span>\r\n      <span className=\"stats-item\">Czas gry: {this.state.time}</span>\r\n      <span className=\"stats-item\">Zjedzone owady: {this.state.killed}</span>\r\n      <span className=\"stats-item\">\r\n        Wynik: {Math.floor( this.state.score ** 2 / (this.state.killed || 1) / (1 + (this.state.time || 1) / 100) )}\r\n      </span>\r\n    </article>\r\n    <article className=\"description\">\r\n      <p>Twój pająk, to ten czerwony krzyżyk.</p>\r\n      <p>Poruszaj się strzałkami, a w owady strzelaj pajaczą nicią za pomocą myszki.</p>\r\n      <p>Jeśli zajedzie spotkanie pająka z żywym owadem, to przegrywasz.</p>\r\n      <p>\r\n        Wraz z wzrostem liczby zabójstw zaczna pojawiać się kolejne rodzaje owadów.\r\n        Będą miały różne rozmiary, różne prędkości, i różną ilość życia\r\n      </p>\r\n      <p>Osiagnij najwyższy wynik poprzez zdobycie wyoskiej punktów i niskiej liczby zabójstw w jak najkrótszym czasie</p>\r\n      <p>\r\n        Zielony to trawa, po której mozesz chodzić;<br />\r\n        pomarańcz to drewno, po którym możesz się wspinać;<br />\r\n        cyjan to niebo, po którym możesz swobodnie spadać.\r\n      </p>\r\n      <p>Czy osiagniesz chociaż wynik większy niż 10 tysięcy?</p>\r\n    </article>\r\n    <canvas ref={this.handleRef} className=\"game-web\" />\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport Web from \"./components/web\"\r\n\r\nimport \"./App.css\"\r\n\r\nexport default () => <Web />","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}